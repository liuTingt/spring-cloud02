# 对应配置文件规则中{application}部分
spring.application.name=didispace
# 对应配置文件规则的{profile}部分
spring.cloud.config.profile=dev
# 对应配置文件规则的{label}部分
spring.cloud.config.label=master
# 指定配置中心config-server地址
spring.cloud.config.uri=http://localhost:7002/
# 开启通过服务开访问Config Server的功能
spring.cloud.config.discovery.enabled=true
# 指定Config Server注册的服务名
spring.cloud.config.discovery.serviceId=config-server
server.port=7003

# 配置服务注册中心
eureka.client.serviceUrl.defaultZone=http://localhost:1111/eureka/

# Springboot 1.5.x以上默认开通了安全确认，如果不关闭会要求权限
# management.security.enabled=false
# 刷新配置，在spring boot 2.x 之前1.x的management.security.enabled失效，新的配置为
management.endpoints.web.exposure.include=bus-refresh

# 加入配置信息通过服务端的安全校验
#spring.cloud.config.username=user
#spring.cloud.config.password=123

# 失败快速响应和重试。 避免了当Config Server配置有误时，不需要多等待前置的一些加载时间，实现快速返回失败信息
# Config客户端提供了重试的功能，开启重试功能前，确保快速响应开启.添加spring-retry 和spring-boot-start-aop依赖即可。
spring.cloud.config.failFast=true
# 初始重试间隔时间(单位：毫秒)
spring.cloud.config.retry.initial-interval=1000
# 下一间隔的乘数，当最初间隔是1000毫秒时，下一次失败后的间隔为1100毫秒
spring.cloud.config.retry.multiplier=1.1
# 最大间隔时间
spring.cloud.config.retry.max-interval=2000
# 最大重试次数
spring.cloud.config.retry.max-attempts=6

# RabbitMQ连接和用户信息
#spring.rabbitmq.host=localhost
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=springcloud
#spring.rabbitmq.password=springcloud

# trace跟踪信息的监听和记录。可以通过请求配置主机的/trace接口，如http://localhost:7002/trace
spring.cloud.bus.trace.enabled=true













