spring.application.name=feign-consumer
server.port=9001

eureka.client.serviceUrl.defaultZone=http://localhost:1111/eureka/


# 配置Ribbon客户端的方式自定义各个服务客户端调用的参数
# 全局配置
ribbon.ConnectTimeout=500
ribbon.ReadTimeout=5000
# 指定服务配置
hello-service.ribbon.ConnetcTimeout=500
hello-service.ribbon.ReadTimeput=2000
hello-service.ribbon.OkToRetryOnAllOperations=true
hello-service.ribbon.MaxAutoRetriesNextServer=2
hello-service.ribbon.MaxAutoRetries=1

#Hystrix配置
#全局配置
# 全局超时时间
hystrix.command.default.execution.isolattion.thread.timeoutInMilliseconds=5000
# 关闭Hystrix功能
# feign.hystrix.enabled=false
# 命令配置，采用hystrix.command.<commandKey>作为前缀，<commandKey>默认采用Feign客户端中的方法名称作为表示，如上节中对/hello接口的熔断超时时间的配置
# 可以通过其方法名作为<commmandKey>来进行配置
hystrix.command.hello.execution.isolation.thread.timeoutInMilliseconds=5000

# 请求压缩配置,开启请求与响应的压缩功能，对请求与响应进行GZIP压缩，以减少通信过程中的性能损耗
feign.compression.request.enabled=true
feign.compression.response.enabled=true
# 还能对请求压缩做更细致的设置,指定压缩请求数据类型
feign.compression.request.mime-types=text/xml,application/xml,application/json
# 设置请求压缩的大小下限，只有超过这个大小的请求才会对其进行压缩
feign.compression.request.min-request-size=2048


# 日志配置
# 使用logging.level.<FeignClient>开启指定Feign客户端的DEBUG日志,<FeignClient>为Feign客户端定义接口的完整路径，但是需要在
# 主类中加入Logger.Level的Bean创建
logging.level.com.example.feignconsumer.service.HelloService = DEBUG
