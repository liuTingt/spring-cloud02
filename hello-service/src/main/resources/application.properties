server.port=8080
# 采用随机端口
#server.port=${random.int[10000,19999]}

# 命名服务名称
spring.application.name=hello-service

# 指定服务注册中心的地址
eureka.client.serviceUrl.defaultZone=http://peer1:1111/eureka,http://peer2:1112/eureka
# 可使用IP地址的形式定义注册中心的地址，默认时false
#eureka.instance.prefer-ip-address=true
# 利用应用名加随机数的方式区分不同的实例
#eureka.instance.instance-id=${spring.application.name}:${random.int}

# 端点配置，若应用设置了context-path，所有的spring-boot-actuator模块的监控端点都会增加一个前缀，所以，为/info和/health端点加上类似的前缀信息
#server.servlet.context-path=/hello
# 以下是相对路径
#eureka.instance.status-page-url-path=${server.servlet.context-path}/info
#eureka.instance.health-check-url-path=${server.servlet.context-path}/health
# 如果客户端使以HTTPS的方式来暴露服务和监控端点，相对路径无法满足，需提供绝对路径的配置参数
#eureka.instance.status-page-url=https://${eureka.instance.hostname}/info
#eureka.instance.health-check-url=https://${eureka.instance.hostname}/health
#eureka.instance.home-page-url=https://${eureka.instance.hostname}/

# eureka客户端的健康检测交给/health端点
eureka.client.healthcheck.enabled=true
